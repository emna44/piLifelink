pipeline {
    agent any

    environment {
        SERVER_USER = 'vagrant'  
        SERVER_IP = '192.167.33.10'  // Make sure this IP is correct
        SERVER_DIR = '/home/vagrant/piLifelink'
    }

    stages {
        stage('Clone Repo') {
            steps {
                echo 'Cloning source code...'
                checkout scm
            }
        }

        stage('Unit Test') {
    steps {
        echo 'Running unit tests...'

        dir('template') {
            echo 'Running frontend tests (React)...'
            sh 'npm install'
            sh 'npm test -- --watchAll=false --passWithNoTests'
        }

        dir('server') {
            echo 'Running backend tests (Node)...'
            sh 'npm install'
            sh 'npm test || echo "No backend tests defined."'
        }
    }
}


        stage('Build React App') {
            steps {
                dir('template') {
                    sh 'npm install'
                    sh 'CI=false npm run build'
                }
            }
        }

        stage('Build Node App') {
            steps {
                dir('server') {
                    sh 'npm install'
                }
            }
        }

stage('Build Docker images') {
  steps {
    script {
      sh 'docker-compose build'
    }
  }
}

    // Comment or remove this stage to skip file copying
        // stage('Copy Files to Server') {
        //     steps {
        //         sshagent(['57c7b439-bddc-42d2-a693-0f93fcd6f1d']) {
        //             // Add your scp or rsync commands here, e.g.:
        //             // sh 'scp -r build/* ${SERVER_USER}@${SERVER_IP}:${SERVER_DIR}/frontend'
        //             // sh 'scp -r ../server/* ${SERVER_USER}@${SERVER_IP}:${SERVER_DIR}/server'
        //             echo 'Files copied to server (add scp commands here)'
        //         }
        //     }
        // }

        // Comment or remove this stage to skip deployment
        // stage('Deploy on Server') {
        //     steps {
        //         sshagent (credentials: ['57c7b439-bddc-42d2-a693-0f93fcd6f1d']) {
        //             sh """
        //                 ssh -o StrictHostKeyChecking=no ${SERVER_USER}@${SERVER_IP} '
        //                 mkdir -p ${SERVER_DIR} &&
        //                 echo "Deployment test successful!" > ${SERVER_DIR}/test.txt
        //                 '
        //             """
        //         }
        //     }
        // }
    }
}
