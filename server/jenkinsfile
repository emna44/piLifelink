pipeline {
    agent any

    environment {
        SERVER_USER = 'vagrant'  
        SERVER_IP = '192.167.33.10'  // Make sure this IP is correct
        SERVER_DIR = '/home/vagrant/piLifelink'
    }

    stages {
        stage('Clone Repo') {
            steps {
                echo 'Cloning source code...'
                checkout scm
            }
        }

        stage('Unit Test') {
            steps {
                echo 'Running unit tests...'

                dir('template') {
                    echo 'Running frontend tests (React)...'
                    sh 'npm install'
                    sh 'npm test -- --watchAll=false' // Use --watchAll=false for CI environments
                }

                dir('server') {
                    echo 'Running backend tests (Node)...'
                    sh 'npm install'
                    sh 'npm test'  // Ensure you have a test script in your server/package.json
                }
            }
        }

        stage('Build React App') {
            steps {
                dir('template') {
                    sh 'npm install'
                    sh 'CI=false npm run build'
                }
            }
        }

        stage('Build Node App') {
            steps {
                dir('server') {
                    sh 'npm install'
                }
            }
        }

        stage('Copy Files to Server') {
            steps {
                sshagent (credentials: ['vagrant-ssh']) {
                    // Replace echo with your actual file transfer commands
                    // e.g., 
                    // sh 'scp -r template/build/* ${SERVER_USER}@${SERVER_IP}:${SERVER_DIR}/frontend'
                    // sh 'scp -r server/* ${SERVER_USER}@${SERVER_IP}:${SERVER_DIR}/server'
                    echo 'Files copied to server (add scp commands here)'
                }
            }
        }

        stage('Deploy on Server') {
            steps {
                sshagent (credentials: ['vagrant-ssh']) {
                    sh """
                        ssh -o StrictHostKeyChecking=no ${SERVER_USER}@${SERVER_IP} '
                        mkdir -p ${SERVER_DIR} &&
                        echo "Deployment test successful!" > ${SERVER_DIR}/test.txt
                        '
                    """
                }
            }
        }
    }
}
